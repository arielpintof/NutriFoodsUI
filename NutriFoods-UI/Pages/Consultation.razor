@page "/consultation/{PatientId:guid}"
@using NutriFoods_UI.Data
@using NutriFoods_UI.Services
@inject IPatientService PatientService

<nav class="mb-6" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="d-flex gap-1 breadcrumb-item ">
      <a class="bi bi-arrow-left mr-1" href="/patients">
        Pacientes
      </a>
    </li>
    <li class="breadcrumb-item active" aria-current="page" href="/user-dashboard">Perfil de
      @FirstWord(Names) @FirstWord(LastNames)
    </li>
    <li class="breadcrumb-item active" aria-current="page">Nueva consulta</li>
  </ol>
</nav>

<AddConsultation PatientId="PatientId"></AddConsultation>

@code {
  [Parameter] public Guid PatientId { get; set; }

  string Names { get; set; } = string.Empty;
  string LastNames { get; set; } = string.Empty;

  PatientDto Patient { get; set; } = new();

  protected override async Task OnInitializedAsync()
  {
    var response = await PatientService.FindPatient(PatientId);

    if (response != null)
    {
      var content = await response.Content.ReadFromJsonAsync<PatientDto>();
      Patient = content!;
      Names = FirstWord(Patient.PersonalInfo.Names);
      LastNames = FirstWord(Patient.PersonalInfo.LastNames);
    }
  }

  static string FirstWord(string name)
  {
    return new string(name.TakeWhile(c => !char.IsWhiteSpace(c)).ToArray());

  }

}