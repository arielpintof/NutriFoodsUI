@using Fluxor
@using NutriFoods_UI.Data.Store.Medicines
@inject IDialogService Dialog
@inject IState<MedicineState> MedicineState
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<MudGrid Class="px-3 mb-5">
    <MudItem xs="4" Class="d-flex flex-column gap-3">
        <div class="d-flex align-items-center">
            <CollapseSubtitle Title="Medicamentos"></CollapseSubtitle>
        </div>
    </MudItem>
    <MudItem xs="8" Class="d-flex flex-column gap-3">
        @if (MedicineState?.Value.Medicines != null)
        {
            <div class="supplement-container">
                @foreach (var time in MedicineState.Value.Medicines.Select((value, index) => new { Value = value, Index = index }))
                {
                    <div class="supplement-item d-flex gap-3">
                        <span class="index align-self-center">@(time.Index + 1)</span>
                        <div class="supplement-details d-flex rounded-lg border px-3 py-3 gap-3 col-10 align-items-center">
                            <span class="supplement-name fw-bold">@time.Value.Name</span>
                        </div>

                        <div class="medicine-actions d-flex align-items-center gap-1">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                           Title="Editar medicamento"
                                           Size="Size.Small">
                            </MudIconButton>

                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Title="Eliminar medicamento"
                                           Size="Size.Small"
                                           Class="animation-button">
                            </MudIconButton>
                        </div>
                    </div>
                }

            </div>
        }
        <div>
            <MudButton
                Size="Size.Small"
                Color="Color.Primary"
                StartIcon="@Icons.Material.Outlined.AddCircle"
                Variant="Variant.Text"
                Style="text-transform: none; font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700;"
                OnClick="() => OpenDialog(_noHeader)">
                Añadir un medicamento
            </MudButton>
        </div>
    </MudItem>

</MudGrid>


@code {

    DialogOptions _noHeader = new DialogOptions() { NoHeader = true };

    private void OpenDialog(DialogOptions options) => Dialog.Show<MedicationIntake>("Custom Options Dialog", options);

}