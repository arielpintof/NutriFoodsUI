@using Fluxor
@using NutriFoods_UI.Data.Store.Supplements
@inject IDialogService Dialog
@inject IState<SupplementState> SupplementState
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDispatcher Dispatcher
@implements IIngestible

<MudGrid Class="px-3 mb-5">
    <MudItem xs="4" Class="flex-column">
        <div class="d-flex align-items-center">
            <CollapseSubtitle Title="Suplementos"></CollapseSubtitle>
        </div>
    </MudItem>
    <MudItem xs="8" Class="flex-column">
        @if (SupplementState?.Value.Supplements != null)
        {
            <div class="supplement-container">
                @foreach (var time in SupplementState.Value.Supplements.Select((value, index) => new { Value = value, Index = index }))
                {
                    <div class="supplement-item d-flex mb-3 gap-3">
                        <span class="index align-self-center">@(time.Index + 1)</span>
                        <div class="supplement-details d-flex rounded-lg border px-3 py-3 gap-3 col-10 align-items-center">
                            <span class="supplement-name fw-bold">@time.Value.Name</span>
                        </div>

                        <div class="medicine-actions d-flex align-items-center gap-1">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                           Title="Editar suplemento"
                                           OnClick="() =>  EditIngestible(time.Index)"
                                           Size="Size.Small">
                            </MudIconButton>

                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           OnClick="() => DeleteIngestible(time.Index)"
                                           Title="Eliminar suplemento"
                                           Size="Size.Small"
                                           Class="animation-button">
                            </MudIconButton>
                        </div>
                    </div>
                }
            </div>
        }
        <div>
            <MudButton
                Size="Size.Small"
                Color="Color.Primary"
                StartIcon="@Icons.Material.Outlined.AddCircle"
                Variant="Variant.Text"
                Style="text-transform: none; font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700;"
                OnClick="() => AddIngestible()">
                Añadir un suplemento
            </MudButton>
        </div>
    </MudItem>

</MudGrid>


@code {

    public DialogOptions Options { get; } = new () { NoHeader = true };
    
    public void AddIngestible()
    {
        var parameters = new DialogParameters<SupplementDialog> {{ x => x.ModeType, ModeTypeEnum.Add }};
        Dialog.Show<SupplementDialog>("Custom Options Dialog", parameters, Options);
    }

    public void EditIngestible(int index)
    {
        var parameters = new DialogParameters<SupplementDialog> {{ x => x.Index, index }, 
            {y => y.ModeType, ModeTypeEnum.Edit}};
        Dialog.Show<SupplementDialog>("Editar suplemento", parameters, Options);
    }

    public void DeleteIngestible(int index)
    {
        var parameters = new DialogParameters<SupplementDialog> {{ x => x.Index, index }};
        Dialog.Show<SupplementDeleteWarning>("¿Estás seguro de eliminar el suplemento?", parameters);
    }

    public void LoadIngestible()
    {
        throw new NotImplementedException();
    }

}