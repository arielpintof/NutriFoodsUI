@using NutriFoods_UI.Data.Model
@using Fluxor
@using MudExtensions.Enums
@using NutriFoods_UI.Data.Dto
@using NutriFoods_UI.Data.Store.Pathologies
@using NutriFoods_UI.Utils.Enums
@inject IState<PersonalPathologiesState> PersonalPathologiesState
@inject IDispatcher Dispatcher
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@page "/patologia"

<MudForm @ref="_form" @bind-IsValid="@IsValidHandler" Model="@PersonalPathology">
    <MudGrid>
        <MudItem md="6" xs="12">
            <div class="d-flex flex-row gap-3">
                <span class="align-self-center">@(Index + 1)</span>
                <MudSelectExtended ItemCollection="_diseases"
                                   SearchBox="true"
                                   SearchBoxAutoFocus="true"
                                   T="string"
                                   Label="Patología"
                                   AnchorOrigin="Origin.BottomCenter"
                                   Variant="Variant.Outlined"
                                   SearchBoxClearable="true"
                                   @bind-Value="PersonalPathology.Name"
                                   Margin="Margin.Dense"
                                   Required="true"/>
            </div>

        </MudItem>
        <MudItem md="6" xs="12">
            <div class="d-flex flex-row gap-3">
                <MudComboBox T="string"
                             Label="Herencia"
                             AnchorOrigin="Origin.BottomCenter"
                             Variant="Variant.Outlined"
                             SearchBoxClearable="true"
                             @bind-Value="PersonalPathology.InheritanceType"
                             Margin="Margin.Dense"
                             Required="true"
                             InputPresenter="ValuePresenter.Text">
                    <ChildContent>
                        @foreach (var item in InheritancesNames)
                        {
                            <MudComboBoxItem Value="@item" Text="@item"></MudComboBoxItem>
                        }
                    </ChildContent>
                </MudComboBox>
                <MudIconButton
                    OnClick="@DeletePathology"
                    Icon="@Icons.Material.Filled.Delete"
                    Title="Eliminar patología"
                    Size="Size.Medium">
                    @Index
                </MudIconButton>

            </div>
        </MudItem>


    </MudGrid>
</MudForm>

@code {

    private DiseaseDto PersonalPathology => Index < PersonalPathologiesState.Value.Pathologies.Count ?
        PersonalPathologiesState.Value.Pathologies.ElementAt(Index) :
        new DiseaseDto();

    private static IEnumerable<string> InheritancesNames => IEnum<InheritanceTypes, InheritanceToken>
        .TokenDictionary
        .Select(e => e.Value.ReadableName)
        .Skip(1)
        .ToList();

    private string[] _diseases =
    {
        "Diabetes", "Hipertensión", "Asma", "Cancer"
    };

    private MudForm _form = new();

    [Parameter]
    public int Index { get; set; }

    public bool IsValid;

    private bool IsValidHandler
    {
        get => IsValid;
        set
        {
            if (IsValid == value) return;
            IsValid = value;
            UpdatePathology();
        }
    }

    private void UpdatePathology()
    {
        var action = new ChangePersonalPathologyAction(Index, new DiseaseDto
        {
            Name = PersonalPathology.Name,
            InheritanceType = PersonalPathology.InheritanceType,
            IsValid = IsValid
        });

        Dispatcher.Dispatch(action);
    }

    private void DeletePathology()
    {
        Console.WriteLine($"Deleteando desde componente, indide {Index}");
        Dispatcher.Dispatch(new DeletePersonalPathologyAction(Index));
    }

}