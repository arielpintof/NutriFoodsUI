@using NutriFoods_UI.Services
@using Fluxor
@using NutriFoods_UI.Data.Store.DailyMeal
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@page "/meal"
@inject IDailyMealPlanService MealPlanService
@inject IState<DailyMealState> MealState
@inject IDispatcher Dispatcher


@if (ActiveIndex)
{
    if (MealState.Value.Initialized)
    {
        <div class="d-flex flex-column container" style="width: 80%">
            @* DailyMeal debe mostrar las distintas comidas del día*@

            <div class="d-flex align-items-center justify-content-between gap-2">
                <h4 style="font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700; color: var(--grey-normal)">
                    Plan Alimentario
                </h4>
                <MudButton @onclick="RenewMealPlan"
                           Variant="Variant.Text"
                           StartIcon="@Icons.Material.Filled.Autorenew"
                           Size="Size.Small"
                           Color="Color.Primary"
                           Style="text-transform: none; font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700;">
                    Renovar plan
                </MudButton>
            </div>


            @for (var i = 0; i < MealState.Value.DailyMenu.Count(); i++)
            {
                <div class="my-1 mud-width-full">
                    <DailyMenu Index="i" DailyMenuDto="@MealState.Value.DailyMenu.ElementAt(i)"></DailyMenu>
                </div>
            }
        </div>
    }
}

else
{
    <div class="center">
        <div class=" lds-ellipsis">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
        </div>
    </div>
}

@code {

    [Parameter]
    public bool ActiveIndex { get; set; }

    protected override Task OnInitializedAsync()
    {
        LoadMealState();
        return base.OnInitializedAsync();
    }

    private void LoadMealState() => Dispatcher.Dispatch(new LoadMealPlanAction());

    private void RenewMealPlan() => Dispatcher.Dispatch(new RenewDailyMealPlanAction());


}