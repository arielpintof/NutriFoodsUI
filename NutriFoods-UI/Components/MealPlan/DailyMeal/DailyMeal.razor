@using NutriFoods_UI.Services
@using Fluxor
@using NutriFoods_UI.Data.Store.DailyMeal
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@page "/meal"
@inject IDailyMealPlanService MealPlanService
@inject IState<DailyMealState> MealState
@inject IDispatcher Dispatcher


@if (MealState.Value.Initialized)
{
   
    <div class="d-flex flex-column align-items-center mud-width-full">
        @* DailyMeal debe mostrar las distintas comidas del día*@
        
        @for (var i = 0; i < MealState.Value.DailyMenu.Count(); i++)
        {
            <div class="my-1">
                <DailyMenu Index="i" DailyMenuDto="@MealState.Value.DailyMenu.ElementAt(i)"></DailyMenu>
            </div>
            
        }
    </div>
}
 
else
{
    <div class="center">
        <div class=" lds-ellipsis"><div></div><div></div><div></div><div></div></div>
    </div>
    
}

@code {
    
    protected override Task OnInitializedAsync()
    {
        Dispatcher.Dispatch(new LoadMealPlanAction());
        return Task.CompletedTask;
    }


}
