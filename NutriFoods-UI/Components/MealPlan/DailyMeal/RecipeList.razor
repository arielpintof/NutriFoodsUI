@page "/plan"
@using NutriFoods_UI.Data.Dto
@using Fluxor
@using NutriFoods_UI.Data.Images
@using NutriFoods_UI.Data.Store.Images
@using NutriFoods_UI.Data.Store.RecipeDialog
@inject IDialogService Dialog
@inject IState<RecipeDialogState> RecipeState
@inject IDispatcher Dispatcher
@inject IState<ImagesState> ImagesState


<table class="my-table mud-width-full">
    <thead>
    <tr>
        <th scope="col" class="ml-2" style="width: 50%">Nombre</th>
        <th scope="col" class="ml-9 mr-9">Energía</th>
        <th scope="col" class="ml-3 mr-3">Proteínas</th>
        <th scope="col" class="ml-3 mr-3">Carbohidratos</th>
        <th scope="col" class="ml-3 mr-3">Lípidos</th>
    </tr>
    </thead>
    <tbody class="mt-2">
    @if (Recipes is not null)
    {
        @foreach (var menu in Recipes)
        {
            <tr class="fila-hover" @onclick="@((e) => OpenDialog(noHeader, menu))">
                <td>
                    <Recipe Name="@menu.Recipe.Name" Image="@GetImage(menu.Recipe.Name)"
                            Portions="@menu.Portions"/>
                </td>
                
                <td>@($"{menu.Recipe.Nutrients.Find(e => e.Nutrient.Equals("Energía, total"))!.Quantity:F1}") Kcal</td>
                <td>@($"{menu.Recipe.Nutrients.Find(e => e.Nutrient.Equals("Proteína, total"))!.Quantity:F1}") g</td>
                <td>@($"{menu.Recipe.Nutrients.Find(e => e.Nutrient.Equals("Carbohidratos, total"))!.Quantity:F1}") g</td>
                <td>@($"{menu.Recipe.Nutrients.Find(e => e.Nutrient.Equals("Ácidos grasos, total"))!.Quantity:F1}") g</td>
            </tr>
        }
    }
    else
    {
        
            <tr>
                <td>
                    <div class="center">
                        <div class="lds-ellipsis">
                            <div></div>
                            <div></div>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </td>

            </tr>
    }
    </tbody>

</table>


@code {

    [Parameter]
    public ICollection<MenuRecipeDto>? Recipes { get; set; }
    
    

    private bool IsHovered { get; set; }

    private void HandleHover(bool isHovered) => IsHovered = isHovered;

    DialogOptions noHeader = new DialogOptions() { NoHeader = true };

    private void OpenDialog(DialogOptions options, MenuRecipeDto recipe)
    {
        Dispatcher.Dispatch(new UpdateDialogAction(recipe));
        Dialog.Show<RecipeDialog>("Custom Options Dialog", options);
        
    }
    

    string GetImage(string name)
    {
        return ImagesState.Value.ImagesDict.TryGetValue(name, out string uri) ? uri : string.Empty;
    }



}