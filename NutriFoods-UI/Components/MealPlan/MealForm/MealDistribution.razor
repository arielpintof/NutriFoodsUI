@using NutriFoods_UI.Utils.Enums
@using NutriFoods_UI.Data.Store.MealsConfiguration
@using Fluxor
@inject IDispatcher Dispatcher
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<MealsConfigurationState> MealState


<div class="mb-4 my-3">
    @for (var i = 0; i < MealTypesCollection.Count; i++)
    {
        <MealTypeIntake Index="i" MealType="MealTypesCollection[i]"></MealTypeIntake>
        <MudDivider Class="mb-5 mt-2"/>
    }
    
    <div class="d-flex justify-start mt-3 mb-5 ml-2">
        <MudButton
            Size="Size.Small"
            Color="Color.Primary"
            StartIcon="@Icons.Material.Outlined.AddCircle"
            Variant="Variant.Text"
            Style="text-transform: none; font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700;">
            Añadir comida del día
        </MudButton>
    </div>
</div>


@code {
    
    private List<MealTypes> MealTypesCollection { get; set; } =
    [
        MealTypes.Breakfast,
        MealTypes.Lunch,
        MealTypes.Dinner
    ];

    protected override Task OnInitializedAsync()
    {
        var action = new List<MealConfiguration>
        {
            new MealConfiguration
            {
                MealType = MealTypes.Breakfast,
                MealTime = new TimeSpan(),
                Percentage = 0
             
            },
            new MealConfiguration
            {
                MealType = MealTypes.Lunch,
                MealTime = new TimeSpan(),
                Percentage = 0
             
            },
            new MealConfiguration
            {
                MealType = MealTypes.Dinner,
                MealTime = new TimeSpan(),
                Percentage = 0
             
            }
        };

        Dispatcher.Dispatch(new InitializeMealsAction(action));
        
        return base.OnInitializedAsync();
    }

    private MealConfiguration CurrentMealConfiguration { get; set; } = new ();

    






}