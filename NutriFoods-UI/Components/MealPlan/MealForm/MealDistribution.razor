@using NutriFoods_UI.Utils.Enums
@using NutriFoods_UI.Data.Store.MealsConfiguration
@using Fluxor
@using System.Globalization
@inject IDispatcher Dispatcher
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<MealsConfigurationState> MealState


<div class="d-flex flex-column my-3 px-3 gap-3">
    @for (var i = 0; i < MealState.Value.Meals.Count; i++)
    {
        <MealTypeIntake Index="i"></MealTypeIntake>
        <MudDivider Class="mb-2 mt-2"/>
    }
    
    <div class="d-flex justify-start mt-3 mb-5 ml-2">
        <MudButton
            Size="Size.Small"
            Color="Color.Primary"
            StartIcon="@Icons.Material.Outlined.AddCircle"
            OnClick="@AddMeal"
            Variant="Variant.Text"
            Style="text-transform: none; font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700;">
            Añadir comida del día
        </MudButton>
    </div>
</div>

@code {

    private void AddMeal() => Dispatcher.Dispatch(new AddMealAction(new MealConfiguration()));


    protected override Task OnInitializedAsync()
    {
        var action = new List<MealConfiguration>
        {
            new MealConfiguration
            {
                MealType = MealTypes.Breakfast,
                MealTime = new TimeSpan(),
                Percentage = 0

            },
            new MealConfiguration
            {
                MealType = MealTypes.Lunch,
                MealTime = new TimeSpan(),
                Percentage = 0

            },
            new MealConfiguration
            {
                MealType = MealTypes.Dinner,
                MealTime = new TimeSpan(),
                Percentage = 0

            }
        };

        Dispatcher.Dispatch(new InitializeMealsAction(action));

        return base.OnInitializedAsync();
    }

    private MealConfiguration CurrentMealConfiguration { get; set; } = new();

}