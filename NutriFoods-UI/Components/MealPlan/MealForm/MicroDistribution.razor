@using Fluxor
@using NutriFoods_UI.Data.Dto
@using NutriFoods_UI.Data.Store.MicronutrientConfiguration
@inject IState<MicronutrientState> MicroState
@inject IDispatcher Dispatcher
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@page "/micro"


<MudGrid Class="px-3">
    <MudItem xs="4" Class="d-flex flex-column gap-2">
        <div class="d-flex align-items-center">
            <span>Límite de consumo</span>
            <MudChip Color="@Color.Primary"
                     Size="Size.Small"
                     Variant="Variant.Text"
                     Style="font-family: 'Plus Jakarta Sans', sans-serif;font-weight: 700">
                    Máximo 4
            </MudChip>
        </div>
        <p>Lorem ipsum dolor sit amet</p>
    </MudItem>
    <MudItem xs="8">
        <MudStack Class="mb-5">
            @if (MicroState.Value.Initialized)
            {
                for (var i = 0; i < MicroState.Value.Micronutrients.Count(); i++)
                {
                    <div class="d-flex flex-column">
                        <MicroNutrientIntake Index="i"></MicroNutrientIntake>
                    </div>
                }
            }
            <div class="mb-2">
                <MudButton
                    Disabled="@IsDisabled"
                    Size="Size.Small"
                    Color="Color.Primary"
                    StartIcon="@Icons.Material.Outlined.AddCircle"
                    Variant="Variant.Text"
                    OnClick="AddNewMicroNutrient"
                    Style="text-transform: none; font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700;">
                    Añadir micronutriente
                </MudButton>
            </div>
            
            <span>Validez del State: @MicroState.Value.StateIsValid</span>

        </MudStack>
    </MudItem>
</MudGrid>


@code {

    private bool IsDisabled => MicroState?.Value?.Micronutrients?.Count() >= 4;

    protected override Task OnInitializedAsync()
    {
        if (MicroState.Value.Initialized != false) return base.OnInitializedAsync();
        Dispatcher.Dispatch(new InitializeMicronutrientAction());
        return base.OnInitializedAsync();
    }

    private void AddNewMicroNutrient()
    {
        Dispatcher.Dispatch(new AddMicronutrientAction(new MicroNutrientDto()));
    }

}

<style>
    .mud-chip.mud-chip-size-small
    {
        font-family: Plus Jakarta Sans, serif;
        font-size: 10px;
        height: 18px;
    }
    
</style>