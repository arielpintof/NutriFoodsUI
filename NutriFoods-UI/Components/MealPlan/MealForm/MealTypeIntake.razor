@using NutriFoods_UI.Utils.Enums
@using NutriFoods_UI.Data.Store.MealsConfiguration
@using Fluxor
@using MudExtensions.Enums
@inject IState<MealsConfigurationState> MealState
@inject IDispatcher Dispatcher


<div class="d-flex px-3 mb-4 align-items-center justify-space-between">
    <div class="d-flex " style="width: 10%">
        <span>@MealType.ReadableName</span>
    </div>
    <div class="d-flex flex-row gap-3" style="width: 63%">
        <div style="width: 40%">
            <span class="label" style="font-size: 13px;">Hora</span>
            <MudTimePicker Class=""
                           Placeholder="Hora de consumo"
                           AmPm="true" 
                           @bind-Time="TimeHandler" 
                           Style="margin-top: 0"
                           Variant="Variant.Outlined"
                           Margin="Margin.Dense"
                           >
            </MudTimePicker>
        </div>

        <div class="d-flex gap-3 mx-1 align-end mud-width-full">
            <div class="d-flex flex-column mud-width-full">
                <span class="label" style="font-size: 13px;">Distribución</span>
                <MudSlider Size="Size.Medium" 
                           @bind-Value="PercentageHandler"
                           Variant="Variant.Filled"
                           Min="0" Max="100" Step="1"
                           Class="mt-2 mb-1">
                </MudSlider>
            </div>
            <div class="d-flex align-items-center gap-1">
                <input class="custom form-control" type="number" min="0" max="100" @bind-value="PercentageHandler"/>
                                <label class="form-label">%</label>
            </div>

            @* <input type="range" min="0" max="100" step="1" id="name" @bind-Value="MealConfiguration.Percentage" @bind="PercentageHandler"/> *@
            @* <input type="number" min="0" max="100" @bind-Value="MealConfiguration.Percentage" @bind="PercentageHandler"> *@
        </div>
    </div>


</div>


@code {

    

    [Parameter]
    public MealTypeEnum MealType { get; set; } = null!;

    [Parameter]
    public int Position { get; set; }

    private double _percentage;

    private double PercentageHandler
    {
        get => _percentage;
        set
        {
            if (_percentage == value) return;
            _percentage = value;
            UpdateMealConfiguration();
        }
    }
    
    private TimeSpan? _time = new TimeSpan(00, 45, 00);

    private TimeSpan? TimeHandler
    {
        get => _time;
        set
        {
            if (_time == value) return;
            _time = value;
            UpdateMealConfiguration();
        }
    }
    private void UpdateMealConfiguration()
    {
        var action = new MealsConfigurationAction(new MealConfiguration
        {
            MealType = MealType,
            MealTime = _time,
            Percentage = _percentage,
        }, Position);

        Dispatcher.Dispatch(action);
    }



}