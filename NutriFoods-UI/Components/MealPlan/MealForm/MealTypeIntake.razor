@using NutriFoods_UI.Utils.Enums
@using NutriFoods_UI.Data.Store.MealsConfiguration
@using Fluxor
@using MudBlazor.Utilities
@using MudExtensions.Enums
@inject IState<MealsConfigurationState> MealState
@inherits IntakeComponent
@inject IDispatcher Dispatcher


<MudGrid>
    <MudForm Model="MealConfigurationModel" IsValid="IsValidHandler"></MudForm>
    <MudItem md="3">
        <span class="label" style="font-size: 13px;">Comida del día</span>
        <MudSelect Variant="Variant.Outlined"
                   Margin="Margin.Dense"
                   AnchorOrigin="Origin.BottomCenter"
                   T="MealTypes?"
                   @bind-Value="MealTypesHandler">
            @foreach (var meal in MealTypesCollection)
            {
                <MudSelectItem Value="@meal">@meal.ReadableName</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem md="3">
        <span class="label" style="font-size: 13px;">Hora</span>
        <MudTimePicker Class=""
                       Placeholder="Hora de consumo"
                       AmPm="true"
                       @bind-Time="TimeHandler"
                       Style="margin-top: 0"
                       Variant="Variant.Outlined"
                       Margin="Margin.Dense">
        </MudTimePicker>
    </MudItem>
    <MudItem md="6">
        <div class="d-flex align-items-center gap-1 mud-width-full">
            <div class="mud-width-full">
                <span class="label" style="font-size: 13px;">Distribución</span>
                <MudSlider Size="Size.Medium"
                           @bind-Value="PercentageHandler"
                           Variant="Variant.Filled"
                           Min="0" Max="100" Step="1"
                           Class="mt-2 mb-1">
                </MudSlider>
            </div>
            <div class="d-flex gap-1 align-items-center">
                <input class="custom form-control mt-2" type="number" min="0" max="100" @bind-value="PercentageHandler"/>
                <label class="form-label ">%</label>
            </div>
        </div>
    </MudItem>
</MudGrid>

@code {

    protected override void OnInitialized()
    {
        MealType = MealState.Value.Meals.ElementAt(Index).MealType;
        PercentageHandler = MealState.Value.Meals.ElementAt(Index).Percentage;
        TimeHandler = MealState.Value.Meals.ElementAt(Index).MealTime;
        
        base.OnInitialized();
    }

    MealTypes? MealType { get; set; }

    MealTypes? MealTypesHandler
    {
        get => MealType;
        set
        {
            MealType = value;
            Update();
        }
    }

    List<MealTypes> MealTypesCollection => IEnum<MealTypes, MealToken>.Values.Skip(1).ToList();

    MealConfiguration MealConfigurationModel => Index < MealState.Value.Meals.Count
        ? MealState.Value.Meals.ElementAt(Index)
        : new MealConfiguration();
    

    private int _percentage;

    private int PercentageHandler
    {
        get => _percentage;
        set
        {
            if (_percentage == value) return;
            _percentage = value;
            Console.WriteLine($"Nuevo porcentaje: {_percentage}, Index: {Index}");
            Update();
        }
    }

    private TimeSpan? _time = new TimeSpan();

    private TimeSpan? TimeHandler
    {
        get => _time;
        set
        {
            if (_time == value) return;
            _time = value;
            Update();
        }
    }
    
    protected override void Delete()
    {
        throw new NotImplementedException();
    }

    protected override void Update()
    {
        var action = new ChangeMealsConfigurationAction(new MealConfiguration
        {
            MealType = MealType,
            MealTime = _time,
            Percentage = _percentage,
        }, Index);

        Dispatcher.Dispatch(action);
    }

}